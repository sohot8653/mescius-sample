/*!
    *
    * Wijmo Library 5.20232.939
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */

import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var __extends=this&&this.__extends||function(){var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)}}(),__decorate=this&&this.__decorate||function(e,t,o,i){var r,n=arguments.length,l=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(l=(n<3?r(l):n>3?r(t,o,l):r(t,o))||l);return n>3&&l&&Object.defineProperty(t,o,l),l},__param=this&&this.__param||function(e,t){return function(o,i){t(o,i,e)}};import{Component,NgModule,ElementRef,Injector,Directive,ViewContainerRef,TemplateRef,Optional,forwardRef,Inject,ChangeDetectorRef,SkipSelf}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{WjDirectiveBehavior,WjValueAccessorFactory}from"@grapecity/wijmo.angular2.directivebase";import{DirectiveCellFactoryBase}from"@grapecity/wijmo.interop.grid";import*as wjcCore from"@grapecity/wijmo";import*as wjcGrid from"@grapecity/wijmo.grid";import*as wjcInteropGrid from"@grapecity/wijmo.interop.grid";export var CellTemplateType=wjcInteropGrid.GridCellTemplateType;var wjFlexGridMeta={selector:"wj-flex-grid",template:"<div><ng-content></ng-content></div>",inputs:["wjModelProperty","isDisabled","tabOrder","newRowAtTop","allowAddNew","allowDelete","allowDragging","allowMerging","allowResizing","allowSorting","allowPinning","autoScroll","autoRowHeights","autoSizeMode","autoGenerateColumns","autoSearch","caseSensitiveSearch","quickAutoSize","bigCheckboxes","childItemsPath","groupHeaderFormat","headersVisibility","showSelectedHeaders","showMarquee","showPlaceholders","itemFormatter","isReadOnly","imeEnabled","mergeManager","selectionMode","showGroups","showSort","showDropDown","showAlternatingRows","showErrors","alternatingRowStep","itemValidator","validateEdits","treeIndent","itemsSource","autoClipboard","expandSelectionOnCopyPaste","frozenRows","frozenColumns","cloneFrozenCells","deferResizing","sortRowIndex","editColumnIndex","stickyHeaders","preserveSelectedState","preserveOutlineState","preserveWhiteSpace","keyActionTab","keyActionEnter","rowHeaderPath","virtualizationThreshold","anchorCursor","lazyRender","refreshOnEdit","copyHeaders","columnGroups","commitEmptyEdits","headersFocusability","ariaLabel"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","refreshingNg: refreshing","refreshedNg: refreshed","invalidInputNg: invalidInput","beginningEditNg: beginningEdit","cellEditEndedNg: cellEditEnded","cellEditEndingNg: cellEditEnding","prepareCellForEditNg: prepareCellForEdit","formatItemNg: formatItem","resizingColumnNg: resizingColumn","resizedColumnNg: resizedColumn","autoSizingColumnNg: autoSizingColumn","autoSizedColumnNg: autoSizedColumn","draggingColumnNg: draggingColumn","draggingColumnOverNg: draggingColumnOver","draggedColumnNg: draggedColumn","sortingColumnNg: sortingColumn","sortedColumnNg: sortedColumn","pinningColumnNg: pinningColumn","pinnedColumnNg: pinnedColumn","resizingRowNg: resizingRow","resizedRowNg: resizedRow","autoSizingRowNg: autoSizingRow","autoSizedRowNg: autoSizedRow","draggingRowNg: draggingRow","draggingRowOverNg: draggingRowOver","draggedRowNg: draggedRow","deletingRowNg: deletingRow","deletedRowNg: deletedRow","loadingRowsNg: loadingRows","loadedRowsNg: loadedRows","rowEditStartingNg: rowEditStarting","rowEditStartedNg: rowEditStarted","rowEditEndingNg: rowEditEnding","rowEditEndedNg: rowEditEnded","rowAddedNg: rowAdded","groupCollapsedChangingNg: groupCollapsedChanging","groupCollapsedChangedNg: groupCollapsedChanged","columnGroupCollapsedChangingNg: columnGroupCollapsedChanging","columnGroupCollapsedChangedNg: columnGroupCollapsedChanged","itemsSourceChangingNg: itemsSourceChanging","itemsSourceChangedNg: itemsSourceChanged","selectionChangingNg: selectionChanging","selectionChangedNg: selectionChanged","scrollPositionChangedNg: scrollPositionChanged","updatingViewNg: updatingView","updatedViewNg: updatedView","updatingLayoutNg: updatingLayout","updatedLayoutNg: updatedLayout","pastingNg: pasting","pastedNg: pasted","pastingCellNg: pastingCell","pastedCellNg: pastedCell","copyingNg: copying","copiedNg: copied"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export{wjFlexGridMeta};var WjFlexGrid=function(e){__extends(WjFlexGrid,e);function WjFlexGrid(t,o,i,r){var n=e.call(this,WjDirectiveBehavior.getHostElement(t,o))||this;n.cdRef=r;n.isInitialized=!1;n._wjBehaviour=WjDirectiveBehavior.attach(n,t,o,i);new DirectiveCellFactory(n,r);n.deferUpdate((function(){if(n.rows.defaultSize<10){var e=n.hostElement,t=getComputedStyle(e),o=getComputedStyle(document.body),i=2*parseInt(t.fontSize&&wjcCore.contains(document.body,e)?t.fontSize:o.fontSize);n.rows.defaultSize=i;n.columns.defaultSize=4*i;n.columnHeaders.rows.defaultSize=i;n.rowHeaders.columns.defaultSize=Math.round(1.25*i)}}));n.created();return n}t=WjFlexGrid;WjFlexGrid.prototype.created=function(){};WjFlexGrid.prototype.ngOnInit=function(){this._wjBehaviour.ngOnInit()};WjFlexGrid.prototype.ngAfterViewInit=function(){this._wjBehaviour.ngAfterViewInit()};WjFlexGrid.prototype.ngOnDestroy=function(){this._wjBehaviour.ngOnDestroy()};WjFlexGrid.prototype.addEventListener=function(t,o,i,r){var n=this;void 0===r&&(r=!1);var l=WjDirectiveBehavior,a=l.getZone(this);a&&l.outsideZoneEvents[o]?a.runOutsideAngular((function(){e.prototype.addEventListener.call(n,t,o,i,r)})):e.prototype.addEventListener.call(this,t,o,i,r)};WjFlexGrid.prototype.startEditing=function(t,o,i,r,n){void 0===t&&(t=!0);this._edtFocus=null;var l=e.prototype.startEditing.call(this,t,o,i,r,n);l&&(this._edtFocus=r||null==r);return l};WjFlexGrid.prototype.onCellEditEnding=function(t){this._edtFocus=null;return e.prototype.onCellEditEnding.call(this,t)};var t;WjFlexGrid.meta={outputs:wjFlexGridMeta.outputs};
WjFlexGrid.ɵfac = function WjFlexGrid_Factory(t) { return new (t || WjFlexGrid)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject("WjComponent", 12), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };
WjFlexGrid.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WjFlexGrid, selectors: [["wj-flex-grid"]], inputs: { wjModelProperty: "wjModelProperty", isDisabled: "isDisabled", tabOrder: "tabOrder", newRowAtTop: "newRowAtTop", allowAddNew: "allowAddNew", allowDelete: "allowDelete", allowDragging: "allowDragging", allowMerging: "allowMerging", allowResizing: "allowResizing", allowSorting: "allowSorting", allowPinning: "allowPinning", autoScroll: "autoScroll", autoRowHeights: "autoRowHeights", autoSizeMode: "autoSizeMode", autoGenerateColumns: "autoGenerateColumns", autoSearch: "autoSearch", caseSensitiveSearch: "caseSensitiveSearch", quickAutoSize: "quickAutoSize", bigCheckboxes: "bigCheckboxes", childItemsPath: "childItemsPath", groupHeaderFormat: "groupHeaderFormat", headersVisibility: "headersVisibility", showSelectedHeaders: "showSelectedHeaders", showMarquee: "showMarquee", showPlaceholders: "showPlaceholders", itemFormatter: "itemFormatter", isReadOnly: "isReadOnly", imeEnabled: "imeEnabled", mergeManager: "mergeManager", selectionMode: "selectionMode", showGroups: "showGroups", showSort: "showSort", showDropDown: "showDropDown", showAlternatingRows: "showAlternatingRows", showErrors: "showErrors", alternatingRowStep: "alternatingRowStep", itemValidator: "itemValidator", validateEdits: "validateEdits", treeIndent: "treeIndent", itemsSource: "itemsSource", autoClipboard: "autoClipboard", expandSelectionOnCopyPaste: "expandSelectionOnCopyPaste", frozenRows: "frozenRows", frozenColumns: "frozenColumns", cloneFrozenCells: "cloneFrozenCells", deferResizing: "deferResizing", sortRowIndex: "sortRowIndex", editColumnIndex: "editColumnIndex", stickyHeaders: "stickyHeaders", preserveSelectedState: "preserveSelectedState", preserveOutlineState: "preserveOutlineState", preserveWhiteSpace: "preserveWhiteSpace", keyActionTab: "keyActionTab", keyActionEnter: "keyActionEnter", rowHeaderPath: "rowHeaderPath", virtualizationThreshold: "virtualizationThreshold", anchorCursor: "anchorCursor", lazyRender: "lazyRender", refreshOnEdit: "refreshOnEdit", copyHeaders: "copyHeaders", columnGroups: "columnGroups", commitEmptyEdits: "commitEmptyEdits", headersFocusability: "headersFocusability", ariaLabel: "ariaLabel" }, outputs: { initialized: "initialized", gotFocusNg: "gotFocus", lostFocusNg: "lostFocus", refreshingNg: "refreshing", refreshedNg: "refreshed", invalidInputNg: "invalidInput", beginningEditNg: "beginningEdit", cellEditEndedNg: "cellEditEnded", cellEditEndingNg: "cellEditEnding", prepareCellForEditNg: "prepareCellForEdit", formatItemNg: "formatItem", resizingColumnNg: "resizingColumn", resizedColumnNg: "resizedColumn", autoSizingColumnNg: "autoSizingColumn", autoSizedColumnNg: "autoSizedColumn", draggingColumnNg: "draggingColumn", draggingColumnOverNg: "draggingColumnOver", draggedColumnNg: "draggedColumn", sortingColumnNg: "sortingColumn", sortedColumnNg: "sortedColumn", pinningColumnNg: "pinningColumn", pinnedColumnNg: "pinnedColumn", resizingRowNg: "resizingRow", resizedRowNg: "resizedRow", autoSizingRowNg: "autoSizingRow", autoSizedRowNg: "autoSizedRow", draggingRowNg: "draggingRow", draggingRowOverNg: "draggingRowOver", draggedRowNg: "draggedRow", deletingRowNg: "deletingRow", deletedRowNg: "deletedRow", loadingRowsNg: "loadingRows", loadedRowsNg: "loadedRows", rowEditStartingNg: "rowEditStarting", rowEditStartedNg: "rowEditStarted", rowEditEndingNg: "rowEditEnding", rowEditEndedNg: "rowEditEnded", rowAddedNg: "rowAdded", groupCollapsedChangingNg: "groupCollapsedChanging", groupCollapsedChangedNg: "groupCollapsedChanged", columnGroupCollapsedChangingNg: "columnGroupCollapsedChanging", columnGroupCollapsedChangedNg: "columnGroupCollapsedChanged", itemsSourceChangingNg: "itemsSourceChanging", itemsSourceChangedNg: "itemsSourceChanged", selectionChangingNg: "selectionChanging", selectionChangedNg: "selectionChanged", scrollPositionChangedNg: "scrollPositionChanged", updatingViewNg: "updatingView", updatedViewNg: "updatedView", updatingLayoutNg: "updatingLayout", updatedLayoutNg: "updatedLayout", pastingNg: "pasting", pastedNg: "pasted", pastingCellNg: "pastingCell", pastedCellNg: "pastedCell", copyingNg: "copying", copiedNg: "copied" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridMeta.providers))], ngContentSelectors: _c0, decls: 2, vars: 0, template: function WjFlexGrid_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WjFlexGrid, [{
        type: Component,
        args: [{ selector: wjFlexGridMeta.selector, template: wjFlexGridMeta.template, inputs: wjFlexGridMeta.inputs, outputs: wjFlexGridMeta.outputs, providers: [{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridMeta.providers) }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [ElementRef]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [Injector]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: ["WjComponent"]
            }, {
                type: SkipSelf
            }, {
                type: Optional
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [ChangeDetectorRef]
            }] }]; }, null); })();return WjFlexGrid=t=__decorate([,__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional()),__param(3,Inject(ChangeDetectorRef))],WjFlexGrid)}(wjcGrid.FlexGrid);export{WjFlexGrid};var wjFlexGridColumnMeta={selector:"wj-flex-grid-column",template:"<div><ng-content></ng-content></div>",inputs:["asyncBindings","wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","isSelected","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor"],outputs:["initialized","isSelectedChangePC: isSelectedChange"],providers:[]};export{wjFlexGridColumnMeta};var WjFlexGridColumn=function(e){__extends(WjFlexGridColumn,e);function WjFlexGridColumn(t,o,i,r){var n=e.call(this)||this;n.cdRef=r;n.isInitialized=!1;n.wjProperty="columns";var l=(n._wjBehaviour=WjDirectiveBehavior.attach(n,t,o,i)).parentBehavior.directive;if(l.autoGenerateColumns){l.autoGenerateColumns=!1;l.columns.clear()}n.created();return n}t=WjFlexGridColumn;WjFlexGridColumn.prototype.created=function(){};WjFlexGridColumn.prototype.ngOnInit=function(){this._wjBehaviour.ngOnInit()};WjFlexGridColumn.prototype.ngAfterViewInit=function(){this._wjBehaviour.ngAfterViewInit()};WjFlexGridColumn.prototype.ngOnDestroy=function(){this._wjBehaviour.ngOnDestroy()};var t;WjFlexGridColumn.meta={outputs:wjFlexGridColumnMeta.outputs,changeEvents:{"grid.selectionChanged":["isSelected"]}};
WjFlexGridColumn.ɵfac = function WjFlexGridColumn_Factory(t) { return new (t || WjFlexGridColumn)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject("WjComponent", 12), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };
WjFlexGridColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WjFlexGridColumn, selectors: [["wj-flex-grid-column"]], inputs: { asyncBindings: "asyncBindings", wjProperty: "wjProperty", name: "name", dataMap: "dataMap", dataType: "dataType", binding: "binding", sortMemberPath: "sortMemberPath", format: "format", cellTemplate: "cellTemplate", header: "header", width: "width", maxLength: "maxLength", minWidth: "minWidth", maxWidth: "maxWidth", align: "align", allowDragging: "allowDragging", allowSorting: "allowSorting", allowResizing: "allowResizing", allowMerging: "allowMerging", aggregate: "aggregate", isReadOnly: "isReadOnly", cssClass: "cssClass", cssClassAll: "cssClassAll", isContentHtml: "isContentHtml", isSelected: "isSelected", visible: "visible", wordWrap: "wordWrap", multiLine: "multiLine", mask: "mask", inputType: "inputType", isRequired: "isRequired", showDropDown: "showDropDown", dataMapEditor: "dataMapEditor", dropDownCssClass: "dropDownCssClass", quickAutoSize: "quickAutoSize", editor: "editor" }, outputs: { initialized: "initialized", isSelectedChangePC: "isSelectedChange" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridColumnMeta.providers))], ngContentSelectors: _c0, decls: 2, vars: 0, template: function WjFlexGridColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WjFlexGridColumn, [{
        type: Component,
        args: [{ selector: wjFlexGridColumnMeta.selector, template: wjFlexGridColumnMeta.template, inputs: wjFlexGridColumnMeta.inputs, outputs: wjFlexGridColumnMeta.outputs, providers: [{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridColumnMeta.providers) }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [ElementRef]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [Injector]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: ["WjComponent"]
            }, {
                type: SkipSelf
            }, {
                type: Optional
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [ChangeDetectorRef]
            }] }]; }, null); })();return WjFlexGridColumn=t=__decorate([,__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional()),__param(3,Inject(ChangeDetectorRef))],WjFlexGridColumn)}(wjcGrid.Column);export{WjFlexGridColumn};var wjFlexGridColumnGroupMeta={selector:"wj-flex-grid-column-group",template:"<div><ng-content></ng-content></div>",inputs:["asyncBindings","wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","isSelected","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor","collapseTo","isCollapsed","height"],outputs:["initialized","isSelectedChangePC: isSelectedChange"],providers:[]};export{wjFlexGridColumnGroupMeta};var WjFlexGridColumnGroup=function(e){__extends(WjFlexGridColumnGroup,e);function WjFlexGridColumnGroup(t,o,i){var r=e.call(this)||this;r.isInitialized=!1;r.wjProperty="columnGroups";r._wjBehaviour=WjDirectiveBehavior.attach(r,t,o,i);r.created();return r}t=WjFlexGridColumnGroup;WjFlexGridColumnGroup.prototype.created=function(){};WjFlexGridColumnGroup.prototype.ngOnInit=function(){this._wjBehaviour.ngOnInit()};WjFlexGridColumnGroup.prototype.ngAfterViewInit=function(){this._wjBehaviour.ngAfterViewInit()};WjFlexGridColumnGroup.prototype.ngOnDestroy=function(){this._wjBehaviour.ngOnDestroy()};var t;WjFlexGridColumnGroup.meta={outputs:wjFlexGridColumnGroupMeta.outputs,changeEvents:{"grid.selectionChanged":["isSelected"]}};
WjFlexGridColumnGroup.ɵfac = function WjFlexGridColumnGroup_Factory(t) { return new (t || WjFlexGridColumnGroup)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject("WjComponent", 12)); };
WjFlexGridColumnGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WjFlexGridColumnGroup, selectors: [["wj-flex-grid-column-group"]], inputs: { asyncBindings: "asyncBindings", wjProperty: "wjProperty", name: "name", dataMap: "dataMap", dataType: "dataType", binding: "binding", sortMemberPath: "sortMemberPath", format: "format", cellTemplate: "cellTemplate", header: "header", width: "width", maxLength: "maxLength", minWidth: "minWidth", maxWidth: "maxWidth", align: "align", allowDragging: "allowDragging", allowSorting: "allowSorting", allowResizing: "allowResizing", allowMerging: "allowMerging", aggregate: "aggregate", isReadOnly: "isReadOnly", cssClass: "cssClass", cssClassAll: "cssClassAll", isContentHtml: "isContentHtml", isSelected: "isSelected", visible: "visible", wordWrap: "wordWrap", multiLine: "multiLine", mask: "mask", inputType: "inputType", isRequired: "isRequired", showDropDown: "showDropDown", dataMapEditor: "dataMapEditor", dropDownCssClass: "dropDownCssClass", quickAutoSize: "quickAutoSize", editor: "editor", collapseTo: "collapseTo", isCollapsed: "isCollapsed", height: "height" }, outputs: { initialized: "initialized", isSelectedChangePC: "isSelectedChange" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridColumnGroupMeta.providers))], ngContentSelectors: _c0, decls: 2, vars: 0, template: function WjFlexGridColumnGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WjFlexGridColumnGroup, [{
        type: Component,
        args: [{ selector: wjFlexGridColumnGroupMeta.selector, template: wjFlexGridColumnGroupMeta.template, inputs: wjFlexGridColumnGroupMeta.inputs, outputs: wjFlexGridColumnGroupMeta.outputs, providers: [{ provide: "WjComponent", useExisting: forwardRef((function () { return t; })) }].concat(wjFlexGridColumnGroupMeta.providers) }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [ElementRef]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [Injector]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: ["WjComponent"]
            }, {
                type: SkipSelf
            }, {
                type: Optional
            }] }]; }, null); })();return WjFlexGridColumnGroup=t=__decorate([,__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional())],WjFlexGridColumnGroup)}(wjcGrid.ColumnGroup);export{WjFlexGridColumnGroup};var WjFlexGridCellTemplate=function(){function WjFlexGridCellTemplate(e,t,o,i,r,n){this.viewContainerRef=e;this.templateRef=t;this.elRef=o;this.cdRef=n;this.autoSizeRows=!0;this.forceFullEdit=!0;if(i instanceof wjcGrid.FlexGrid)this.grid=i;else if(i instanceof wjcGrid.Column){this.column=i;var l=void 0,a=WjDirectiveBehavior.getBehavior(i);do{l=(a=a.parentBehavior)&&a.directive}while(l&&!(l instanceof wjcGrid.FlexGrid));this.grid=l}}e=WjFlexGridCellTemplate;WjFlexGridCellTemplate.prototype.ngOnInit=function(){this.ownerControl=this.column&&this.column.grid===this.grid?this.column:this.grid;this._attachToControl()};WjFlexGridCellTemplate.prototype.ngOnDestroy=function(){if(this.cellTypeStr){this.viewContainerRef.clear();this.ownerControl[DirectiveCellFactory.getTemplContextProp(this.cellType)]=null;this.grid.invalidate()}};WjFlexGridCellTemplate.prototype._instantiateTemplate=function(e,t){return WjDirectiveBehavior.instantiateTemplate(e,this.viewContainerRef,this.templateRef,!1,t)};WjFlexGridCellTemplate.prototype._attachToControl=function(){if(this.cellTypeStr){var e=this.cellType=wjcCore.asEnum(this.cellTypeStr,CellTemplateType),t=this.ownerControl;t[DirectiveCellFactory.getTemplContextProp(e)]=this;t instanceof wjcGrid.Column&&(e===CellTemplateType.Cell||e===CellTemplateType.ColumnHeader||e===CellTemplateType.ColumnFooter)&&t._setFlag(wjcGrid.RowColFlags.HasTemplate,!0);this.grid.invalidate()}};var e;
WjFlexGridCellTemplate.ɵfac = function WjFlexGridCellTemplate_Factory(t) { return new (t || WjFlexGridCellTemplate)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject("WjComponent", 12), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };
WjFlexGridCellTemplate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WjFlexGridCellTemplate, selectors: [["", "wjFlexGridCellTemplate", ""]], inputs: { wjFlexGridCellTemplate: "wjFlexGridCellTemplate", cellTypeStr: ["cellType", "cellTypeStr"], cellOverflow: "cellOverflow", valuePaths: "valuePaths", autoSizeRows: "autoSizeRows", forceFullEdit: "forceFullEdit" }, exportAs: ["wjFlexGridCellTemplate"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: "WjComponent", useExisting: forwardRef((function () { return e; })) }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WjFlexGridCellTemplate, [{
        type: Directive,
        args: [{ selector: "[wjFlexGridCellTemplate]", inputs: ["wjFlexGridCellTemplate", "cellTypeStr: cellType", "cellOverflow", "valuePaths", "autoSizeRows", "forceFullEdit"], exportAs: "wjFlexGridCellTemplate", providers: [{ provide: "WjComponent", useExisting: forwardRef((function () { return e; })) }] }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [ViewContainerRef]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [TemplateRef]
            }, {
                type: Optional
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [ElementRef]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: ["WjComponent"]
            }, {
                type: SkipSelf
            }, {
                type: Optional
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [Injector]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [ChangeDetectorRef]
            }] }]; }, null); })();return WjFlexGridCellTemplate=e=__decorate([,__param(0,Inject(ViewContainerRef)),__param(1,Inject(TemplateRef)),__param(1,Optional()),__param(2,Inject(ElementRef)),__param(3,Inject("WjComponent")),__param(3,SkipSelf()),__param(3,Optional()),__param(4,Inject(Injector)),__param(5,Inject(ChangeDetectorRef))],WjFlexGridCellTemplate)}();export{WjFlexGridCellTemplate};var DirectiveCellFactory=function(e){__extends(DirectiveCellFactory,e);function DirectiveCellFactory(t,o){var i=e.call(this,t)||this;i._needsCdCheck=!1;i._gridCdRef=o;t.updatedView.addHandler((function(){if(i._needsCdCheck){i._needsCdCheck=!1;i._gridCdRef.markForCheck()}}),i);return i}DirectiveCellFactory.prototype.shouldInstantiate=function(e){var t=e.templateCache;return null==t||t.column!==e.column||!t.viewRef||t.templateContextProperty!==e.templateContextProperty||e.cell.firstChild!=t.rootElement};DirectiveCellFactory.prototype.renderTemplate=function(e,t){var o=e.row,i=t?{}:e.templateCache.viewRef.context,r=e.templateContext;e.cellBindingsData=this.setBindingsData(i,o,e.column,o.dataItem,e.cellValue,r.valuePaths);if(t){var n=e.cell,l=r._instantiateTemplate(n,i),a=e.templateCache={column:e.column,viewRef:l.viewRef,rootElement:l.rootElement,templateContextProperty:e.templateContextProperty};n[e.templateContextProperty]=a}};DirectiveCellFactory.prototype.setBindingsData=function(t,o,i,r,n,l){this._needsCdCheck=!0;return e.prototype.setBindingsData.call(this,t,o,i,r,n,l)};DirectiveCellFactory.prototype.disposeTemplate=function(t,o,i){if(o&&o.viewRef){if(i){var r=i.viewContainerRef.indexOf(o.viewRef);r>-1&&i.viewContainerRef.remove(r)}o.viewRef=null;e.prototype.disposeTemplate.call(this,t,o,i)}};DirectiveCellFactory.prototype.clearCell=function(e){e.textContent=""};DirectiveCellFactory.prototype.applyImmediately=function(e){e.templateContext.cdRef.detectChanges()};DirectiveCellFactory.prototype.flushPendingEvents=function(e){if(e){var t=WjDirectiveBehavior.getBehavior(e);t&&t.flushPendingEvents()}};DirectiveCellFactory.prototype.getEditorFocusFlag=function(){return this.grid._edtFocus};DirectiveCellFactory.prototype.setEditorFocusFlag=function(e){this.grid._edtFocus=e};DirectiveCellFactory.prototype.checkHeight=function(t){var o=this;WjDirectiveBehavior.getZone(this.grid).runOutsideAngular((function(){e.prototype.checkHeight.call(o,t)}))};return DirectiveCellFactory}(DirectiveCellFactoryBase);export{DirectiveCellFactory};var moduleExports=[WjFlexGrid,WjFlexGridColumn,WjFlexGridColumnGroup,WjFlexGridCellTemplate],WjGridModule=function(){function WjGridModule(){}
WjGridModule.ɵfac = function WjGridModule_Factory(t) { return new (t || WjGridModule)(); };
WjGridModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WjGridModule });
WjGridModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WjGridModule, [{
        type: NgModule,
        args: [{ imports: [CommonModule], declarations: moduleExports.slice(), exports: moduleExports.slice() }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WjGridModule, { declarations: function () { return [WjFlexGrid, WjFlexGridColumn, WjFlexGridColumnGroup, WjFlexGridCellTemplate]; }, imports: function () { return [CommonModule]; }, exports: function () { return [WjFlexGrid, WjFlexGridColumn, WjFlexGridColumnGroup, WjFlexGridCellTemplate]; } }); })();return WjGridModule}();export{WjGridModule};