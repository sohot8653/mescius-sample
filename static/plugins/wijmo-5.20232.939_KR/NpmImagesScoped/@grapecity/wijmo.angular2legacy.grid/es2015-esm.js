/*!
    *
    * Wijmo Library 5.20232.939
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */

var WjFlexGrid_1,WjFlexGridColumn_1,WjFlexGridColumnGroup_1,WjFlexGridCellTemplate_1,__decorate=this&&this.__decorate||function(e,t,i,o){var r,l=arguments.length,n=l<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,i,o);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(n=(l<3?r(n):l>3?r(t,i,n):r(t,i))||n);return l>3&&n&&Object.defineProperty(t,i,n),n},__param=this&&this.__param||function(e,t){return function(i,o){t(i,o,e)}};import{Component,NgModule,ElementRef,Injector,Directive,ViewContainerRef,TemplateRef,Optional,forwardRef,Inject,ChangeDetectorRef,SkipSelf}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{WjDirectiveBehavior,WjValueAccessorFactory}from"@grapecity/wijmo.angular2legacy.directivebase";import{DirectiveCellFactoryBase}from"@grapecity/wijmo.interop.grid";import*as wjcCore from"@grapecity/wijmo";import*as wjcGrid from"@grapecity/wijmo.grid";import*as wjcInteropGrid from"@grapecity/wijmo.interop.grid";export var CellTemplateType=wjcInteropGrid.GridCellTemplateType;var wjFlexGridMeta={selector:"wj-flex-grid",template:"<div><ng-content></ng-content></div>",inputs:["wjModelProperty","isDisabled","tabOrder","newRowAtTop","allowAddNew","allowDelete","allowDragging","allowMerging","allowResizing","allowSorting","allowPinning","autoScroll","autoRowHeights","autoSizeMode","autoGenerateColumns","autoSearch","caseSensitiveSearch","quickAutoSize","bigCheckboxes","childItemsPath","groupHeaderFormat","headersVisibility","showSelectedHeaders","showMarquee","showPlaceholders","itemFormatter","isReadOnly","imeEnabled","mergeManager","selectionMode","showGroups","showSort","showDropDown","showAlternatingRows","showErrors","alternatingRowStep","itemValidator","validateEdits","treeIndent","itemsSource","autoClipboard","expandSelectionOnCopyPaste","frozenRows","frozenColumns","cloneFrozenCells","deferResizing","sortRowIndex","editColumnIndex","stickyHeaders","preserveSelectedState","preserveOutlineState","preserveWhiteSpace","keyActionTab","keyActionEnter","rowHeaderPath","virtualizationThreshold","anchorCursor","lazyRender","refreshOnEdit","copyHeaders","columnGroups","commitEmptyEdits","headersFocusability","ariaLabel"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","refreshingNg: refreshing","refreshedNg: refreshed","invalidInputNg: invalidInput","beginningEditNg: beginningEdit","cellEditEndedNg: cellEditEnded","cellEditEndingNg: cellEditEnding","prepareCellForEditNg: prepareCellForEdit","formatItemNg: formatItem","resizingColumnNg: resizingColumn","resizedColumnNg: resizedColumn","autoSizingColumnNg: autoSizingColumn","autoSizedColumnNg: autoSizedColumn","draggingColumnNg: draggingColumn","draggingColumnOverNg: draggingColumnOver","draggedColumnNg: draggedColumn","sortingColumnNg: sortingColumn","sortedColumnNg: sortedColumn","pinningColumnNg: pinningColumn","pinnedColumnNg: pinnedColumn","resizingRowNg: resizingRow","resizedRowNg: resizedRow","autoSizingRowNg: autoSizingRow","autoSizedRowNg: autoSizedRow","draggingRowNg: draggingRow","draggingRowOverNg: draggingRowOver","draggedRowNg: draggedRow","deletingRowNg: deletingRow","deletedRowNg: deletedRow","loadingRowsNg: loadingRows","loadedRowsNg: loadedRows","rowEditStartingNg: rowEditStarting","rowEditStartedNg: rowEditStarted","rowEditEndingNg: rowEditEnding","rowEditEndedNg: rowEditEnded","rowAddedNg: rowAdded","groupCollapsedChangingNg: groupCollapsedChanging","groupCollapsedChangedNg: groupCollapsedChanged","columnGroupCollapsedChangingNg: columnGroupCollapsedChanging","columnGroupCollapsedChangedNg: columnGroupCollapsedChanged","itemsSourceChangingNg: itemsSourceChanging","itemsSourceChangedNg: itemsSourceChanged","selectionChangingNg: selectionChanging","selectionChangedNg: selectionChanged","scrollPositionChangedNg: scrollPositionChanged","updatingViewNg: updatingView","updatedViewNg: updatedView","updatingLayoutNg: updatingLayout","updatedLayoutNg: updatedLayout","pastingNg: pasting","pastedNg: pasted","pastingCellNg: pastingCell","pastedCellNg: pastedCell","copyingNg: copying","copiedNg: copied"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export{wjFlexGridMeta};let WjFlexGrid=WjFlexGrid_1=class WjFlexGrid extends wjcGrid.FlexGrid{constructor(e,t,i,o){super(WjDirectiveBehavior.getHostElement(e,t));this.cdRef=o;this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,i);new DirectiveCellFactory(this,o);this.deferUpdate(()=>{if(this.rows.defaultSize<10){let e=this.hostElement,t=getComputedStyle(e),i=getComputedStyle(document.body),o=2*parseInt(t.fontSize&&wjcCore.contains(document.body,e)?t.fontSize:i.fontSize);this.rows.defaultSize=o;this.columns.defaultSize=4*o;this.columnHeaders.rows.defaultSize=o;this.rowHeaders.columns.defaultSize=Math.round(1.25*o)}});this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,i,o=!1){let r=WjDirectiveBehavior,l=r.getZone(this);l&&r.outsideZoneEvents[t]?l.runOutsideAngular(()=>{super.addEventListener(e,t,i,o)}):super.addEventListener(e,t,i,o)}startEditing(e=!0,t,i,o,r){this._edtFocus=null;let l=super.startEditing(e,t,i,o,r);l&&(this._edtFocus=o||null==o);return l}onCellEditEnding(e){this._edtFocus=null;return super.onCellEditEnding(e)}};WjFlexGrid.meta={outputs:wjFlexGridMeta.outputs};WjFlexGrid=WjFlexGrid_1=__decorate([Component({selector:wjFlexGridMeta.selector,template:wjFlexGridMeta.template,inputs:wjFlexGridMeta.inputs,outputs:wjFlexGridMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjFlexGrid_1)},...wjFlexGridMeta.providers]}),__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional()),__param(3,Inject(ChangeDetectorRef))],WjFlexGrid);export{WjFlexGrid};var wjFlexGridColumnMeta={selector:"wj-flex-grid-column",template:"<div><ng-content></ng-content></div>",inputs:["asyncBindings","wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","isSelected","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor"],outputs:["initialized","isSelectedChangePC: isSelectedChange"],providers:[]};export{wjFlexGridColumnMeta};let WjFlexGridColumn=WjFlexGridColumn_1=class WjFlexGridColumn extends wjcGrid.Column{constructor(e,t,i,o){super();this.cdRef=o;this.isInitialized=!1;this.wjProperty="columns";let r=(this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,i)).parentBehavior.directive;if(r.autoGenerateColumns){r.autoGenerateColumns=!1;r.columns.clear()}this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}};WjFlexGridColumn.meta={outputs:wjFlexGridColumnMeta.outputs,changeEvents:{"grid.selectionChanged":["isSelected"]}};WjFlexGridColumn=WjFlexGridColumn_1=__decorate([Component({selector:wjFlexGridColumnMeta.selector,template:wjFlexGridColumnMeta.template,inputs:wjFlexGridColumnMeta.inputs,outputs:wjFlexGridColumnMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjFlexGridColumn_1)},...wjFlexGridColumnMeta.providers]}),__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional()),__param(3,Inject(ChangeDetectorRef))],WjFlexGridColumn);export{WjFlexGridColumn};var wjFlexGridColumnGroupMeta={selector:"wj-flex-grid-column-group",template:"<div><ng-content></ng-content></div>",inputs:["asyncBindings","wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","isSelected","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor","collapseTo","isCollapsed","height"],outputs:["initialized","isSelectedChangePC: isSelectedChange"],providers:[]};export{wjFlexGridColumnGroupMeta};let WjFlexGridColumnGroup=WjFlexGridColumnGroup_1=class WjFlexGridColumnGroup extends wjcGrid.ColumnGroup{constructor(e,t,i){super();this.isInitialized=!1;this.wjProperty="columnGroups";this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,i);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}};WjFlexGridColumnGroup.meta={outputs:wjFlexGridColumnGroupMeta.outputs,changeEvents:{"grid.selectionChanged":["isSelected"]}};WjFlexGridColumnGroup=WjFlexGridColumnGroup_1=__decorate([Component({selector:wjFlexGridColumnGroupMeta.selector,template:wjFlexGridColumnGroupMeta.template,inputs:wjFlexGridColumnGroupMeta.inputs,outputs:wjFlexGridColumnGroupMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjFlexGridColumnGroup_1)},...wjFlexGridColumnGroupMeta.providers]}),__param(0,Inject(ElementRef)),__param(1,Inject(Injector)),__param(2,Inject("WjComponent")),__param(2,SkipSelf()),__param(2,Optional())],WjFlexGridColumnGroup);export{WjFlexGridColumnGroup};let WjFlexGridCellTemplate=WjFlexGridCellTemplate_1=class WjFlexGridCellTemplate{constructor(e,t,i,o,r,l){this.viewContainerRef=e;this.templateRef=t;this.elRef=i;this.cdRef=l;this.autoSizeRows=!0;this.forceFullEdit=!0;if(o instanceof wjcGrid.FlexGrid)this.grid=o;else if(o instanceof wjcGrid.Column){this.column=o;let e,t=WjDirectiveBehavior.getBehavior(o);do{e=(t=t.parentBehavior)&&t.directive}while(e&&!(e instanceof wjcGrid.FlexGrid));this.grid=e}}ngOnInit(){this.ownerControl=this.column&&this.column.grid===this.grid?this.column:this.grid;this._attachToControl()}ngOnDestroy(){if(this.cellTypeStr){this.viewContainerRef.clear();this.ownerControl[DirectiveCellFactory.getTemplContextProp(this.cellType)]=null;this.grid.invalidate()}}_instantiateTemplate(e,t){return WjDirectiveBehavior.instantiateTemplate(e,this.viewContainerRef,this.templateRef,!1,t)}_attachToControl(){if(!this.cellTypeStr)return;let e=this.cellType=wjcCore.asEnum(this.cellTypeStr,CellTemplateType),t=this.ownerControl;t[DirectiveCellFactory.getTemplContextProp(e)]=this;t instanceof wjcGrid.Column&&(e===CellTemplateType.Cell||e===CellTemplateType.ColumnHeader||e===CellTemplateType.ColumnFooter)&&t._setFlag(wjcGrid.RowColFlags.HasTemplate,!0);this.grid.invalidate()}};WjFlexGridCellTemplate=WjFlexGridCellTemplate_1=__decorate([Directive({selector:"[wjFlexGridCellTemplate]",inputs:["wjFlexGridCellTemplate","cellTypeStr: cellType","cellOverflow","valuePaths","autoSizeRows","forceFullEdit"],exportAs:"wjFlexGridCellTemplate",providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjFlexGridCellTemplate_1)}]}),__param(0,Inject(ViewContainerRef)),__param(1,Inject(TemplateRef)),__param(1,Optional()),__param(2,Inject(ElementRef)),__param(3,Inject("WjComponent")),__param(3,SkipSelf()),__param(3,Optional()),__param(4,Inject(Injector)),__param(5,Inject(ChangeDetectorRef))],WjFlexGridCellTemplate);export{WjFlexGridCellTemplate};export class DirectiveCellFactory extends DirectiveCellFactoryBase{constructor(e,t){super(e);this._needsCdCheck=!1;this._gridCdRef=t;e.updatedView.addHandler(()=>{if(this._needsCdCheck){this._needsCdCheck=!1;this._gridCdRef.markForCheck()}},this)}shouldInstantiate(e){let t=e.templateCache;return null==t||t.column!==e.column||!t.viewRef||t.templateContextProperty!==e.templateContextProperty||e.cell.firstChild!=t.rootElement}renderTemplate(e,t){let i=e.row,o=t?{}:e.templateCache.viewRef.context,r=e.templateContext;e.cellBindingsData=this.setBindingsData(o,i,e.column,i.dataItem,e.cellValue,r.valuePaths);if(t){let t=e.cell,i=r._instantiateTemplate(t,o),l=e.templateCache={column:e.column,viewRef:i.viewRef,rootElement:i.rootElement,templateContextProperty:e.templateContextProperty};t[e.templateContextProperty]=l}}setBindingsData(e,t,i,o,r,l){this._needsCdCheck=!0;return super.setBindingsData(e,t,i,o,r,l)}disposeTemplate(e,t,i){if(t&&t.viewRef){if(i){let e=i.viewContainerRef.indexOf(t.viewRef);e>-1&&i.viewContainerRef.remove(e)}t.viewRef=null;super.disposeTemplate(e,t,i)}}clearCell(e){e.textContent=""}applyImmediately(e){e.templateContext.cdRef.detectChanges()}flushPendingEvents(e){if(e){let t=WjDirectiveBehavior.getBehavior(e);t&&t.flushPendingEvents()}}getEditorFocusFlag(){return this.grid._edtFocus}setEditorFocusFlag(e){this.grid._edtFocus=e}checkHeight(e){WjDirectiveBehavior.getZone(this.grid).runOutsideAngular(()=>{super.checkHeight(e)})}}let moduleExports=[WjFlexGrid,WjFlexGridColumn,WjFlexGridColumnGroup,WjFlexGridCellTemplate],WjGridModule=class WjGridModule{};WjGridModule=__decorate([NgModule({imports:[CommonModule],declarations:[...moduleExports],exports:[...moduleExports]})],WjGridModule);export{WjGridModule};