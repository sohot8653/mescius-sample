/*!
    *
    * Wijmo Library 5.20232.939
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */

"use strict";var WjMultiRow_1,WjMultiRowCell_1,WjMultiRowCellGroup_1,WjMultiRowCellTemplate_1,__decorate=this&&this.__decorate||function(e,t,o,i){var r,l=arguments.length,a=l<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,i);else for(var n=e.length-1;n>=0;n--)(r=e[n])&&(a=(l<3?r(a):l>3?r(t,o,a):r(t,o))||a);return l>3&&a&&Object.defineProperty(t,o,a),a},__param=this&&this.__param||function(e,t){return function(o,i){t(o,i,e)}},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.hasOwnProperty.call(e,o)&&(t[o]=e[o]);t.default=e;return t};Object.defineProperty(exports,"__esModule",{value:!0});const core_1=require("@angular/core"),common_1=require("@angular/common"),forms_1=require("@angular/forms"),wijmo.angular2legacy_directivebase_1=require("@grapecity/wijmo.angular2legacy.directivebase"),wjcGridMultirow=__importStar(require("@grapecity/wijmo.grid.multirow")),wjGrid=__importStar(require("@grapecity/wijmo.angular2legacy.grid"));var wjMultiRowMeta={selector:"wj-multi-row",template:"<div><ng-content></ng-content></div>",inputs:["asyncBindings","wjModelProperty","isDisabled","tabOrder","newRowAtTop","allowAddNew","allowDelete","allowDragging","allowMerging","allowResizing","allowSorting","allowPinning","autoScroll","autoRowHeights","autoSizeMode","autoGenerateColumns","autoSearch","caseSensitiveSearch","quickAutoSize","bigCheckboxes","childItemsPath","groupHeaderFormat","headersVisibility","showSelectedHeaders","showMarquee","showPlaceholders","itemFormatter","isReadOnly","imeEnabled","mergeManager","selectionMode","showGroups","showSort","showDropDown","showAlternatingRows","showErrors","alternatingRowStep","itemValidator","validateEdits","treeIndent","itemsSource","autoClipboard","expandSelectionOnCopyPaste","frozenRows","frozenColumns","cloneFrozenCells","deferResizing","sortRowIndex","editColumnIndex","stickyHeaders","preserveSelectedState","preserveOutlineState","preserveWhiteSpace","keyActionTab","keyActionEnter","rowHeaderPath","virtualizationThreshold","anchorCursor","lazyRender","refreshOnEdit","copyHeaders","columnGroups","layoutDefinition","headerLayoutDefinition","centerHeadersVertically","collapsedHeaders","showHeaderCollapseButton","multiRowGroupHeaders","commitEmptyEdits","headersFocusability"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","refreshingNg: refreshing","refreshedNg: refreshed","invalidInputNg: invalidInput","beginningEditNg: beginningEdit","cellEditEndedNg: cellEditEnded","cellEditEndingNg: cellEditEnding","prepareCellForEditNg: prepareCellForEdit","formatItemNg: formatItem","resizingColumnNg: resizingColumn","resizedColumnNg: resizedColumn","autoSizingColumnNg: autoSizingColumn","autoSizedColumnNg: autoSizedColumn","draggingColumnNg: draggingColumn","draggingColumnOverNg: draggingColumnOver","draggedColumnNg: draggedColumn","sortingColumnNg: sortingColumn","sortedColumnNg: sortedColumn","pinningColumnNg: pinningColumn","pinnedColumnNg: pinnedColumn","resizingRowNg: resizingRow","resizedRowNg: resizedRow","autoSizingRowNg: autoSizingRow","autoSizedRowNg: autoSizedRow","draggingRowNg: draggingRow","draggingRowOverNg: draggingRowOver","draggedRowNg: draggedRow","deletingRowNg: deletingRow","deletedRowNg: deletedRow","loadingRowsNg: loadingRows","loadedRowsNg: loadedRows","rowEditStartingNg: rowEditStarting","rowEditStartedNg: rowEditStarted","rowEditEndingNg: rowEditEnding","rowEditEndedNg: rowEditEnded","rowAddedNg: rowAdded","groupCollapsedChangingNg: groupCollapsedChanging","groupCollapsedChangedNg: groupCollapsedChanged","columnGroupCollapsedChangingNg: columnGroupCollapsedChanging","columnGroupCollapsedChangedNg: columnGroupCollapsedChanged","itemsSourceChangingNg: itemsSourceChanging","itemsSourceChangedNg: itemsSourceChanged","selectionChangingNg: selectionChanging","selectionChangedNg: selectionChanged","scrollPositionChangedNg: scrollPositionChanged","updatingViewNg: updatingView","updatedViewNg: updatedView","updatingLayoutNg: updatingLayout","updatedLayoutNg: updatedLayout","pastingNg: pasting","pastedNg: pasted","pastingCellNg: pastingCell","pastedCellNg: pastedCell","copyingNg: copying","copiedNg: copied","collapsedHeadersChangingNg: collapsedHeadersChanging","collapsedHeadersChangedNg: collapsedHeadersChanged","collapsedHeadersChangePC: collapsedHeadersChange"],providers:[{provide:forms_1.NG_VALUE_ACCESSOR,useFactory:wijmo.angular2legacy_directivebase_1.WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};exports.wjMultiRowMeta=wjMultiRowMeta;let WjMultiRow=WjMultiRow_1=class WjMultiRow extends wjcGridMultirow.MultiRow{constructor(e,t,o,i){super(wijmo.angular2legacy_directivebase_1.WjDirectiveBehavior.getHostElement(e,t));this.cdRef=i;this.isInitialized=!1;this._wjBehaviour=wijmo.angular2legacy_directivebase_1.WjDirectiveBehavior.attach(this,e,t,o);new wjGrid.DirectiveCellFactory(this,i);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,o,i=!1){let r=wijmo.angular2legacy_directivebase_1.WjDirectiveBehavior,l=r.getZone(this);l&&r.outsideZoneEvents[t]?l.runOutsideAngular(()=>{super.addEventListener(e,t,o,i)}):super.addEventListener(e,t,o,i)}startEditing(e=!0,t,o,i,r){this._edtFocus=null;let l=super.startEditing(e,t,o,i,r);l&&(this._edtFocus=i||null==i);return l}onCellEditEnding(e){this._edtFocus=null;return super.onCellEditEnding(e)}};WjMultiRow.meta={outputs:wjMultiRowMeta.outputs,changeEvents:{collapsedHeadersChanged:["collapsedHeaders"]}};WjMultiRow=WjMultiRow_1=__decorate([core_1.Component({selector:wjMultiRowMeta.selector,template:wjMultiRowMeta.template,inputs:wjMultiRowMeta.inputs,outputs:wjMultiRowMeta.outputs,providers:[{provide:"WjComponent",useExisting:core_1.forwardRef(()=>WjMultiRow_1)},...wjMultiRowMeta.providers]}),__param(0,core_1.Inject(core_1.ElementRef)),__param(1,core_1.Inject(core_1.Injector)),__param(2,core_1.Inject("WjComponent")),__param(2,core_1.SkipSelf()),__param(2,core_1.Optional()),__param(3,core_1.Inject(core_1.ChangeDetectorRef))],WjMultiRow);exports.WjMultiRow=WjMultiRow;var wjMultiRowCellMeta={selector:"wj-multi-row-cell",template:"<div><ng-content></ng-content></div>",inputs:["wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor","colspan","rowspan"],outputs:["initialized"],providers:[]};exports.wjMultiRowCellMeta=wjMultiRowCellMeta;let WjMultiRowCell=WjMultiRowCell_1=class WjMultiRowCell extends wjcGridMultirow.MultiRowCell{constructor(e,t,o,i){super();this.cdRef=i;this.isInitialized=!1;this.wjProperty="cells";this._wjBehaviour=wijmo.angular2legacy_directivebase_1.WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}};WjMultiRowCell.meta={outputs:wjMultiRowCellMeta.outputs};WjMultiRowCell=WjMultiRowCell_1=__decorate([core_1.Component({selector:wjMultiRowCellMeta.selector,template:wjMultiRowCellMeta.template,inputs:wjMultiRowCellMeta.inputs,outputs:wjMultiRowCellMeta.outputs,providers:[{provide:"WjComponent",useExisting:core_1.forwardRef(()=>WjMultiRowCell_1)},...wjMultiRowCellMeta.providers]}),__param(0,core_1.Inject(core_1.ElementRef)),__param(1,core_1.Inject(core_1.Injector)),__param(2,core_1.Inject("WjComponent")),__param(2,core_1.SkipSelf()),__param(2,core_1.Optional()),__param(3,core_1.Inject(core_1.ChangeDetectorRef))],WjMultiRowCell);exports.WjMultiRowCell=WjMultiRowCell;var wjMultiRowCellGroupMeta={selector:"wj-multi-row-cell-group",template:"<div><ng-content></ng-content></div>",inputs:["wjProperty","name","dataMap","dataType","binding","sortMemberPath","format","cellTemplate","header","width","maxLength","minWidth","maxWidth","align","allowDragging","allowSorting","allowResizing","allowMerging","aggregate","isReadOnly","cssClass","cssClassAll","isContentHtml","visible","wordWrap","multiLine","mask","inputType","isRequired","showDropDown","dataMapEditor","dropDownCssClass","quickAutoSize","editor","colspan","rowspan"],outputs:["initialized"],providers:[]};exports.wjMultiRowCellGroupMeta=wjMultiRowCellGroupMeta;let WjMultiRowCellGroup=WjMultiRowCellGroup_1=class WjMultiRowCellGroup extends wjcGridMultirow.MultiRowCellGroup{constructor(e,t,o,i){super();this.cdRef=i;this.isInitialized=!1;this.wjProperty="layoutDefinition";this._wjBehaviour=wijmo.angular2legacy_directivebase_1.WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}};WjMultiRowCellGroup.meta={outputs:wjMultiRowCellGroupMeta.outputs};WjMultiRowCellGroup=WjMultiRowCellGroup_1=__decorate([core_1.Component({selector:wjMultiRowCellGroupMeta.selector,template:wjMultiRowCellGroupMeta.template,inputs:wjMultiRowCellGroupMeta.inputs,outputs:wjMultiRowCellGroupMeta.outputs,providers:[{provide:"WjComponent",useExisting:core_1.forwardRef(()=>WjMultiRowCellGroup_1)},...wjMultiRowCellGroupMeta.providers]}),__param(0,core_1.Inject(core_1.ElementRef)),__param(1,core_1.Inject(core_1.Injector)),__param(2,core_1.Inject("WjComponent")),__param(2,core_1.SkipSelf()),__param(2,core_1.Optional()),__param(3,core_1.Inject(core_1.ChangeDetectorRef))],WjMultiRowCellGroup);exports.WjMultiRowCellGroup=WjMultiRowCellGroup;let WjMultiRowCellTemplate=WjMultiRowCellTemplate_1=class WjMultiRowCellTemplate extends wjGrid.WjFlexGridCellTemplate{constructor(e,t,o,i,r,l){super(e,t,o,i,r,l)}};WjMultiRowCellTemplate=WjMultiRowCellTemplate_1=__decorate([core_1.Directive({selector:"[wjMultiRowCellTemplate]",inputs:["wjMultiRowCellTemplate","cellTypeStr: cellType","cellOverflow","valuePaths","autoSizeRows","forceFullEdit"],exportAs:"wjMultiRowCellTemplate",providers:[{provide:"WjComponent",useExisting:core_1.forwardRef(()=>WjMultiRowCellTemplate_1)}]}),__param(0,core_1.Inject(core_1.ViewContainerRef)),__param(1,core_1.Inject(core_1.TemplateRef)),__param(1,core_1.Optional()),__param(2,core_1.Inject(core_1.ElementRef)),__param(3,core_1.Inject("WjComponent")),__param(3,core_1.SkipSelf()),__param(3,core_1.Optional()),__param(4,core_1.Inject(core_1.Injector)),__param(5,core_1.Inject(core_1.ChangeDetectorRef))],WjMultiRowCellTemplate);exports.WjMultiRowCellTemplate=WjMultiRowCellTemplate;let moduleExports=[WjMultiRow,WjMultiRowCell,WjMultiRowCellGroup,WjMultiRowCellTemplate],WjGridMultirowModule=class WjGridMultirowModule{};WjGridMultirowModule=__decorate([core_1.NgModule({imports:[common_1.CommonModule],declarations:[...moduleExports],exports:[...moduleExports]})],WjGridMultirowModule);exports.WjGridMultirowModule=WjGridMultirowModule;