<div class="sample-tutorial">
    <div id="ss" class="sample-spreadsheets"></div>
    <div class="sample-panel">
        <div id="panel"></div>
    </div>
</div>

<style>
.sample-tutorial {
    position: relative;
    height: 100%;
}

.sample-spreadsheets {
   width: calc(100% - 300px);
   height: 100%;
   overflow: hidden;
   float: left;
}

body {
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   right: 0;
   overflow: hidden;
}

.sample-panel {
   float: right;
   width: 300px;
   padding: 12px;
   height: 100%;
   box-sizing: border-box;
   background: #fbfbfb;
   overflow: auto;
}

.gc-panel {
   padding: 10px;
   background-color: rgb(230, 230, 230);
}

#panel {
   position: absolute;
   right: 0;
   width: 300px;
   height: 100%;
   top: 0;
}

#app {
   height: 100%;
}
</style>

<script>
window.onload = function () {
    var spread = new GC.Spread.Sheets.Workbook(_getElementById('ss'), { sheetCount: 2 });
    initSpread(spread);
    var pivotLayoutSheet = spread.getSheet(0);
    initPivotTable(pivotLayoutSheet);
};
var aaa;
function initSpread(spread) {
    
    $.ajax({
        url: 'json/Sample2.json',
        datatype: "json",
        success: function (data) {
            var spreadNS = GC.Spread.Sheets;
            
            var sheet = spread.getSheet(1);
            sheet.setRowCount(data.length + 1);
            spread.suspendPaint();
            var table = sheet.tables.addFromDataSource("Table1", 0, 0, data, spreadNS.Tables.TableThemes.medium7);
            table.showFooter(true);
            table.showHeader(true);
            table.highlightFirstColumn(true);
            table.highlightLastColumn(false);

            spread.resumePaint();
        },
        error: function (ex) {
            alert('Exception:' + ex);
        }
    });

    initPivotTable(spread.getSheet(0), 'Table1');

    //spread.suspendPaint();
    //let sheet = spread.getSheet(1);
    // sheet.name("DataSource");
    // sheet.setRowCount(117);
    // sheet.setColumnWidth(0, 120);
    // sheet.getCell(-1, 0).formatter("YYYY-mm-DD");
    // sheet.getRange(-1,4,0,2).formatter("$ #,##0");
    // sheet.setArray(0, 0, pivotSales);
    // let table = sheet.tables.add('tableSales', 0, 0, 117, 6);
    // for(let i=2;i<=117;i++)
    // {
    //   sheet.setFormula(i-1,5,'=D'+i+'*E'+i)
    // }
    // table.style(GC.Spread.Sheets.Tables.TableThemes["none"]);
    // let sheet0 = spread.getSheet(0);
    // sheet0.name("PivotLayout");
    // spread.resumePaint();
}

function initPivotTable(sheet, tableName) {
    sheet.name("Basic PivotTable");
    sheet.setRowCount(1000);
    let pivotTableOptions = {bandRows:true,bandColumns:true};
    let pivotTable = sheet.pivotTables.add("PivotTable", tableName, 1, 1, GC.Spread.Pivot.PivotTableLayoutType.outline, GC.Spread.Pivot.PivotTableThemes.medium1, pivotTableOptions);
    pivotTable.suspendLayout();
    pivotTable.add("지역", "지역", GC.Spread.Pivot.PivotTableFieldType.rowField);
    // pivotTable.add("car", "Cars", GC.Spread.Pivot.PivotTableFieldType.rowField);
    // pivotTable.add("date", "Date", GC.Spread.Pivot.PivotTableFieldType.columnField);
    // let groupInfo = { originFieldName: "date", dateGroups: [{ by: GC.Pivot.DateGroupType.quarters }] };
    // pivotTable.group(groupInfo);
    // pivotTable.add("total", "Totals", GC.Spread.Pivot.PivotTableFieldType.valueField, GC.Pivot.SubtotalType.sum);
    // let style = new GC.Spread.Sheets.Style();
    // style.formatter = "$ #,##0";
    // pivotTable.setStyle({dataOnly: true}, style);
    pivotTable.resumeLayout();
    pivotTable.autoFitColumn();
}

function _getElementById(id) {
    return document.getElementById(id);
}
</script>